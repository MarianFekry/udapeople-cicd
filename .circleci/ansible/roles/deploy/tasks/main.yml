---
  - name: Copy files
    become: true
    copy:
      src: /root/project/artifact.tar.gz
      dest: /home/ubuntu/artifact.tar.gz
  - name: Unarchive
    become: true
    shell : |
        cd /home/ubuntu/
        tar xvzf artifact.tar.gz -C .
  - name: "run server"
    become: true
    shell : |
        cd /home/ubuntu/
        npm install
        pm2 stop default
        pm2 start npm -- start
    environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
# - name: "Creates backend app directory"
#   file:
#     path: ~/backend-app
#     state: directory

# - name: "Unarchive backend files"
#   unarchive:
#     src: artifact.tar.gz
#     dest: ~/backend-app


# - name: "Installing Node Dependencies"
#   shell: |
#     npm install pm2@latest -g
#     cd ~/backend-app
#     npm install

# - name: "Executing Node app with PM2"
#   shell: |
#     cd ~/backend-app/dist
#     # node ./main.js
#     pm2 stop default
#     pm2 start main.js

#   register: execute_node

# - name: print message
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"

# - name: "Configure pm2 to start as service"
#   become: true
#   shell: |
#     env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu


# - name: "Copy compiled backend app"
#   copy:
#     src: dist.zip
#     dest: "~/backend-app/dist.zip"

# - name: "Unzip backend files to correct directory"
#   shell: |
#     cd ~/backend-app
#     unzip dist.zip
#     rm -rf dist.zip
# - name: "Install dependencies for project"
#   shell: |
#     cd ~/backend-app
#     npm install
# - name: "Executing node"
#   shell: |
#     export
#     cd ~/backend-app
#     pm2 start main.js
#   register: execute_node

# - name: print message
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"

# - name: "Configure pm2 to start as service"
#   shell: |
#     env PATH=$PATH:/usr/local/bin pm2 startup -u ubuntu

# 
# - name: "Run the equivalent of 'apt-get update' as a separate step"
#   apt:
#     update_cache: yes

# - name: Ansible shell module multiple commands
#   shell: 'curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -'

# - name: Install required packages
#   apt: name={{ item }} state=present
#   with_items:
#       - curl
#       - wget
#       - nginx
#       - nodejs

# 











# - name: Install the gpg key for nodejs LTS
#   apt_key:
#     url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
#     state: present

# - name: Install the nodejs LTS repos
#   apt_repository:
#     repo: "deb https://deb.nodesource.com/node_13.x ansible-core_2.12.6 main"
#     state: present
#     update_cache: yes

# - name: Install the nodejs
#   apt:
#     name: nodejs
#     state: present


# 
# 

